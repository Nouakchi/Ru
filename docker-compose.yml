
services:
  app:
    build:
      context: ./Front-end      # Build context is the current directory (where Dockerfile is)
      dockerfile: Dockerfile
      # For development, we don't need to specify a target stage,
      # as we'll override the command to run the dev server.
      # The 'production-stage' in the Dockerfile is primarily for 'docker build'.
    container_name: my_vite_vue_dev_app
    ports:
      # Maps port 5173 (default Vite dev port) on your host to port 5173 in the container
      # Vite's default port is 5173. If you change it in vite.config.js, update here.
      - "5173:5173"
    volumes:
      # Mounts the current directory on the host to /app in the container for hot-reloading
      - .:/app
      # Anonymous volume to prevent local node_modules from overwriting container's node_modules
      - /app/node_modules
    # Command to run the Vite development server
    # The '--host' flag makes the server accessible from outside the container.
    command: npm run dev -- --host 0.0.0.0
    environment:
      # CHOKIDAR_USEPOLLING can help with hot-reloading in some Docker environments.
      - CHOKIDAR_USEPOLLING=true
      # For Vite, ensure HMR (Hot Module Replacement) works correctly.
      # Vite's default HMR port should work fine with the --host flag.
      # If you have issues, you might need to configure server.hmr in vite.config.js:
      # server: {
      #   hmr: {
      #     clientPort: 5173, // Or your mapped host port
      #     host: 'localhost', // Or the host you access it from
      #   }
      # }
    # If your Vite app needs a specific network or other configurations, add them here.